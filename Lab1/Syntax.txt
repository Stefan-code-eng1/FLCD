The words - predefined tokens are specified between " and ":
program ::= "prog {" stmtlist "}"
declaration ::= IDENTIFIER "(" type ")" [","] {declaration}
type1 ::= "char" | "int" | "str"
arraydecl ::= "arr" "(" type1 "[" INTCONST "]" ")"
type  ::= type1|arraydecl
stmtlist ::= stmt | stmt ";" stmtlist
stmt ::= simplstmt | structstmt
simplstmt ::= assignstmt | iostmt | declaration
assignstmt ::= IDENTIFIER "=" expression
expression ::= expression "+" term | expression "-" term | term
term ::= term "*" factor | term "/" factor | factor
factor ::= "(" expression ")" | IDENTIFIER | CONST
iostmt ::= "read" "(" IDENTIFIER ")" | "print" "(" IDENTIFIER ")" | "print" "(" CONST ")" 
structstmt ::= stmtlist | ifstmt | whilestmt
ifstmt ::= "if" condition "{" stmtlist "}" ["else" "{" stmtlist "}"]
whilestmt ::= "while" condition "{" stmtlist "}"
condition ::= expression RELATION expression
RELATION ::= "<" | "<=" | "==" | "<>" | ">=" | ">"
