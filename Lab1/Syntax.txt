program ::= "#adapt *bascic*" decllist cmpdstmt 

type ::= type1 | arraydecl

type1 ::= "INT" | "STRING" | "BOOL" 

arraydecl ::= "create" IDENTIFIER "type" type1 "with" nnumber

decllist ::= declaration | declaration decllist

declaration ::= "create" IDENTIFIER "type" type1

nnumber = [1-9]+

cmpdstmt ::= "BEGIN" stmtlist "END"

stmtlist ::= stmt | stmt stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt

assignstmt ::= IDENTIFIER "=" expression

expression ::= expression mop term | term

term ::= term dor factor | factor

factor ::= "(" expression ")" | IDENTIFIER

iostmt ::= "read" | "write" "(" IDENTIFIER ")"

structstmt ::= cmpdstmt | ifstmt | whilestmt

ifstmt ::= "if" condition "give" stmt ["else give" stmt]

whilestmt ::= "while" condition "do" stmt

condition ::= expression RELATION expression

RELATION ::= "less" | "less or eq" | "eq" | "diff" | "more" | "more or eq"

mop = "minus" | "plus"
dor = "div" | "res"